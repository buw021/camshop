import React, { useState, useEffect, useRef } from "react";

const samp = () => {
  const [toggleProfile, setToggleProfile] = useState(false);
  const [toggleSearch, setToggleSearch] = useState(false);
  const [toggleCart, settToggleCart] = useState(false);
  const [toggleExtend, setToggleExtend] = useState("");

  const node = useRef<HTMLDivElement>(null); // Create a ref for the profile div

  const handleClickOutside = (e: any) => {
    if (node.current && !node.current.contains(e.target)) {
      // Outside click
      setToggleProfile(false);
    }
  };

  const handleToggleExtend = (e: string) => {
    switch (e) {
      default:
        setToggleExtend("");
    }
  };

  useEffect(() => {
    if (toggleProfile) {
      document.addEventListener("mousedown", handleClickOutside);
    } else {
      document.removeEventListener("mousedown", handleClickOutside);
    }

    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, [toggleProfile]);

  return (
    <>
      <div
        className={`${
          toggleExtend ? "h-[100vh]" : "h-16"
        } bg-white w-full flex flex-col sticky top-0 py-2 px-4 md:px-[10vw] items-center shadow-md  roboto-regular select-none transition-all ease-in duration-500 z-50`}
      >
        <span
          className={`${
            toggleExtend ? "opacity-100" : "opacity-0"
          } material-symbols-outlined absolute filled text-gray-500 hover:cursor-pointer right-5 top-4 transition-all ease-in duration-300`}
          onClick={() => handleToggleExtend("")}
        >
          close
        </span>
        <div
          className={`${
            toggleExtend ? "opacity-0 collapse" : "opacity-100"
          } flex flex-row w-full items-center justify-between roboto-regular select-none transition-opacity ease-in duration-300`}
        >
          <div className="flex items-center gap-4">
            <div className="bg-gray-300 w-7 h-7 rounded-full hover:cursor-pointer"></div>
            <ul>
              <li>Home</li>
            </ul>
          </div>
          <div className="flex gap-5 md:gap-8 flex-row items-center transition-all duration-100">
            <div className="flex items-center gap-2 ">
              <div
                className={`select-none ${
                  toggleSearch ? "w-20 md:w-96 " : "w-0"
                } rounded-xl transition-all duration-200 overflow-hidden`}
              >
                <input
                  type="text"
                  placeholder="Looking for Something?"
                  className={`${
                    toggleSearch ? "w-20 md:w-96" : "w-0"
                  } select-none  p-2 border-[1px] rounded-xl roboto-regular outline-none focus:border-slate-500 border-slate-300 transition-all duration-200`}
                ></input>
              </div>
              <span
                className="material-symbols-outlined filled text-gray-500 hover:cursor-pointer"
                onClick={() => setToggleSearch(!toggleSearch)}
              >
                search
              </span>
            </div>
            <div className="flex items-center gap-2 ">
              <span className="material-symbols-outlined filled text-gray-500 hover:cursor-pointer">
                shopping_cart
              </span>
            </div>
            <div
              className="bg-gray-300 w-7 h-7 rounded-full relative hover:cursor-pointer"
              onClick={() => setToggleProfile(!toggleProfile)}
              ref={node} // Attach the ref to the profile div
            >
              <div
                className={`${
                  toggleProfile
                    ? "w-[250px] h-[300px] opacity-100"
                    : "w-[250px] h-0 opacity-0"
                } bg-slate-300 transistion-all duration-200  absolute right-0 top-16 rounded-lg`}
              ></div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default samp;
